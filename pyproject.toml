[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "sdfstudio"
version = "0.3.1"
description = "All-in-one repository for state-of-the-art neural surface reconstruction"
readme = "README.md"
license = { text="Apache 2.0"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
]
dependencies = [
    "appdirs",
    #"av",
    "tyro",
    #"gdown",
    #"ninja",
    #"functorch==0.2.1",
    #"h5py",
    "imageio",
    #"ipywidgets",
    #"jupyterlab",
    #"matplotlib==3.10.0",
    "mediapy",
    #"msgpack",
    #"msgpack_numpy",
    "nerfacc==0.5.2",
    "open3d",
    "opencv-python",
    #"plotly",
    #"protobuf",
    "pymeshlab",
    "pyngrok",
    #"python-socketio",
    #"requests",
    #"rich",
    "scikit-image",
    "tensorboard",
    "torch>=2.0,<2.6",
    "torchvision>=0.15,<=0.20.1",
    "torchmetrics[image]",
    #"torchtyping>=0.1.4",
    #"u-msgpack-python",
    #"nuscenes-devkit>=1.1.1",
    "wandb",
    "xatlas",
    "trimesh",
    #"numpy==2.2.2",
    "rawpy",
    #"scipy==1.15.1",
    "tornado",
    "pyzmq"
]

[project.urls]
"Documentation" = "https://docs.nerf.studio"


[project.optional-dependencies]
# Development packages
dev = [
    "black[jupyter]==22.3.0",
    "pylint==2.13.4",
    "pytest==7.1.2",
    "pytest-xdist==2.5.0",
    "typeguard>=2.13.3",
]

# Documentation related packages
docs = [
    "furo==2022.09.29",
    # Specifying ipython for https://github.com/ipython/ipython/issues/13845
    "ipython==8.6.0",
    "readthedocs-sphinx-search==0.1.2",
    "myst-nb==0.16.0",
    "nbconvert==7.2.5",
    "nbformat==5.5.0",
    "sphinx==5.2.1",
    "sphinxemoji==0.2.0",
    "sphinx-argparse==0.3.1",
    "sphinx-copybutton==0.5.0",
    "sphinx-design==0.2.0",
    "sphinxext-opengraph==0.6.3"
]

[project.scripts]
# Note, add entrypoint name to scripts/completions/install.py to include CLI completion
sdf-install-cli = "scripts.completions.install:entrypoint"
sdf-process-data = "scripts.process_data:entrypoint"
sdf-download-data = "scripts.downloads.download_data:entrypoint"
sdf-train = "scripts.train:entrypoint"
sdf-eval = "scripts.eval:entrypoint"
sdf-render = "scripts.render:entrypoint"
sdf-export = "scripts.exporter:entrypoint"
sdf-dev-test = "scripts.github.run_actions:entrypoint"
sdf-bridge-server = "nerfstudio.viewer.server.server:entrypoint"
sdf-extract-mesh = "scripts.extract_mesh:entrypoint"
sdf-render-mesh = "scripts.render_mesh:entrypoint"
sdf-texture-mesh = "scripts.texture:entrypoint"


#[options]
# equivalent to using --extra-index-url with pip, which is needed for specifying the CUDA version torch and torchvision
#dependency_links = [
#    "https://download.pytorch.org/whl/cu113"
#]

[tool.setuptools.packages.find]
include = ["nerfstudio*","scripts*"]

[tool.setuptools.package-data]
"*" = ["*.json", "py.typed", "setup.bash", "setup.zsh"]

# black
[tool.black]
line-length = 120

# pylint
[tool.pylint.messages_control]
max-line-length = 120
generated-members = ["numpy.*", "torch.*", "cv2.*", "cv.*"]
good-names-rgxs = "^[_a-zA-Z][_a-z0-9]?$"
ignore-paths = ["scripts/colmap2nerf.py"]
jobs = 0
ignored-classes = ["TensorDataclass"]

disable = [
  "duplicate-code",
  "fixme",
  "logging-fstring-interpolation",
  "too-many-arguments",
  "too-many-branches",
  "too-many-instance-attributes",
  "too-many-locals",
  "unnecessary-ellipsis",
]

#pytest
[tool.pytest.ini_options]
addopts = "-n=4 --typeguard-packages=nerfstudio --torchtyping-patch-typeguard --disable-warnings"
testpaths = [
    "tests",
]

# pyright
[tool.pyright]
include = ["nerfstudio"]
exclude = ["**/node_modules",
    "**/__pycache__",
]
ignore = ["nerfstudio/viewer"]
defineConstant = { DEBUG = true }

reportMissingImports = true
reportMissingTypeStubs = false
reportPrivateImportUsage = false
reportUndefinedVariable = false

pythonVersion = "3.9"
pythonPlatform = "Linux"
